# -*- coding: utf-8 -*-
"""SalesInsightsGenerator

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xLZuCmngMPxcOe2XazKKWwxxnQjrF1-X
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import os

"""
Cenário: Uma empresa de varejo deseja analisar seus dados de vendas para identificar tendências,
melhorar a tomada de decisões e criar relatórios automatizados para diferentes equipes.
"""

def criar_estrutura_pastas():
    pastas = ['data/raw', 'data/processed', 'reports', 'insights']
    for pasta in pastas:
        os.makedirs(pasta, exist_ok=True)
    print("Estrutura de pastas criada com sucesso!")

def criar_exemplo_csv(caminho_arquivo):
    dados = {
        'Data': pd.date_range(start='2023-01-01', periods=100, freq='D'),
        'Produto': np.random.choice(['Produto A', 'Produto B', 'Produto C'], 100),
        'Região': np.random.choice(['Norte', 'Sul', 'Leste', 'Oeste'], 100),
        'Vendas': np.random.randint(100, 1000, 100)
    }

    df = pd.DataFrame(dados)

    df.to_csv(caminho_arquivo, index=False)
    print(f"Arquivo de exemplo criado em: {caminho_arquivo}")

def processar_dados(caminho_arquivo):
    dados = pd.read_csv(caminho_arquivo)

    dados.dropna(inplace=True)
    dados['Data'] = pd.to_datetime(dados['Data'])

    dados.to_csv('data/processed/dados_processados.csv', index=False)
    print("Dados processados e salvos com sucesso!")
    return dados

def consolidar_dados(dados):
    consolidado = dados.groupby(['Produto', 'Região'])['Vendas'].sum().reset_index()
    consolidado.to_csv('data/processed/dados_consolidados.csv', index=False)
    print("Dados consolidados e salvos com sucesso!")
    return consolidado

def analisar_dados(dados):
    print("Estatísticas Descritivas:")
    print(dados.describe())

    print("\nTop 5 Produtos Mais Vendidos:")
    top_produtos = dados.groupby('Produto')['Vendas'].sum().nlargest(5)
    print(top_produtos)

    plt.figure(figsize=(10, 6))
    top_produtos.plot(kind='bar')
    plt.title('Top 5 Produtos Mais Vendidos')
    plt.xlabel('Produto')
    plt.ylabel('Vendas Totais')
    plt.savefig('insights/top_produtos.png')
    plt.show()

"""
Os dados processados e consolidados serão utilizados para:
- Tomada de decisões estratégicas.
- Criação de relatórios automatizados.
- Identificação de tendências de vendas.
"""

def gerar_relatorio_pago(dados):
    relatorio = dados.pivot_table(index='Produto', columns='Região', values='Vendas', aggfunc='sum')
    relatorio.to_csv('reports/relatorio_pago.csv')
    print("Relatório pago gerado com sucesso!")

def gerar_relatorio_gratuito(dados):
    relatorio = dados.groupby('Produto')['Vendas'].sum()
    relatorio.to_csv('reports/relatorio_gratuito.csv')
    print("Relatório gratuito gerado com sucesso!")

"""
Este script demonstra como processar dados de vendas, gerar insights e criar relatórios automatizados.
Ele pode ser expandido para incluir mais funcionalidades, como análise de tendências, previsões, etc.
"""

"""
- Documentação do Pandas: https://pandas.pydata.org/pandas-docs/stable/
- Documentação do Matplotlib: https://matplotlib.org/stable/contents.html
- Exemplos de uso de prompts para análise de dados: https://www.example.com
"""

if __name__ == "__main__":
    criar_estrutura_pastas()

    caminho_arquivo = 'data/raw/dados_vendas.csv'
    if not os.path.exists(caminho_arquivo):
        criar_exemplo_csv(caminho_arquivo)

    dados = processar_dados(caminho_arquivo)
    consolidado = consolidar_dados(dados)
    analisar_dados(consolidado)
    gerar_relatorio_pago(consolidado)
    gerar_relatorio_gratuito(consolidado)